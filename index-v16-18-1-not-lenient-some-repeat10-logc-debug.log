info: Starting app with parameters:
{
  "lenient": false,
  "repeat": 10,
  "query": [
    6,
    10,
    19,
    29,
    47
  ],
  "log": "verbose",
  "logc": "debug"
}
info: Memory usage before handling queries: 
      rss 63.12 MB
      heapTotal 32.84 MB
      heapUsed 22.29 MB
      external 3.88 MB
      arrayBuffers 1.07 MB
verbose: Query: 
{
  id(_:KNOWS)
  member {
    slug (_: "belgian-parliamentary-votes-as-a-knowledge-graph")
    year (_: "2021")
    id
    subject @single {
      keywords
      name @single
      text @single
    }
    contactPoint {
      id @single
      givenName @single
      familyName @single
      mbox @single
    }
    numberOfEmployees @single {
      maxValue @single
    }
  }
}
verbose: Context: {
  "@context": {
    "KNOWS": "https://data.knows.idlab.ugent.be/person/office/#",
    "foaf": "http://xmlns.com/foaf/0.1/",
    "schema": "http://schema.org/",
    "bbc": "http://www.bbc.co.uk/ontologies/coreconcepts/",
    "dp": "http://dbpedia.org/ontology/",
    "member": {
      "@reverse": "schema:memberOf"
    },
    "subject": "schema:subject",
    "keywords": "schema:keywords",
    "hasPart": "schema:hasPart",
    "text": "schema:text",
    "contactPoint": "schema:contactPoint",
    "mbox": "foaf:mbox",
    "givenName": {
      "@id": "foaf:givenName",
      "@language": "en"
    },
    "familyName": {
      "@id": "foaf:familyName",
      "@language": "en"
    },
    "numberOfEmployees": "schema:numberOfEmployees",
    "maxValue": "schema:maxValue",
    "additionalType": "schema:additionalType",
    "name": "schema:name",
    "year": "dp:year",
    "slug": "bbc:slug"
  }
}
verbose: Sources: [
  "https://data.knows.idlab.ugent.be/person/office/#]",
  "https://ruben.verborgh.org/profile/#me",
  "https://pieterheyvaert.com/#me",
  "https://pietercolpaert.be/#me",
  "https://www.rubensworks.net/#me",
  "https://ben.de-meester.org/#me",
  "https://natadimou.com/#me",
  "https://data.knows.idlab.ugent.be/person/femkeongenae/#me",
  "https://data.knows.idlab.ugent.be/person/sofieverbrugge/#me",
  "https://data.knows.idlab.ugent.be/person/office/master-theses.ttl"
]
info: Starting query 6/48, repetition 0/10
[2022-11-15T14:26:27.483Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/office/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:27.548Z]  INFO: Requesting https://ruben.verborgh.org/profile/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:27.553Z]  INFO: Requesting https://pieterheyvaert.com/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:27.557Z]  INFO: Requesting https://pietercolpaert.be/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:27.561Z]  INFO: Requesting https://www.rubensworks.net/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:27.565Z]  INFO: Requesting https://ben.de-meester.org/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:27.569Z]  INFO: Requesting https://natadimou.com/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:27.574Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/femkeongenae/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:27.578Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/sofieverbrugge/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:27.584Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/office/master-theses.ttl {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:27.814Z]  INFO: Identified as file source: https://pieterheyvaert.com/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:27.847Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/sofieverbrugge/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:27.871Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/femkeongenae/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:27.883Z]  INFO: Identified as file source: https://natadimou.com/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:28.313Z]  INFO: Identified as file source: https://ruben.verborgh.org/profile/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:28.777Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/office/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:29.587Z]  INFO: Identified as file source: https://ben.de-meester.org/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:29.844Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/office/master-theses.ttl {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:30.392Z]  INFO: Identified as file source: https://www.rubensworks.net/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:30.973Z]  INFO: Requesting https://schema.org {
  headers: {
    accept: 'application/ld+json',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:31.158Z]  INFO: Requesting https://schema.org//docs/jsonldcontext.jsonld {
  headers: {
    accept: 'application/ld+json',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:32.896Z]  INFO: Identified as file source: https://pietercolpaert.be/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:32.965Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: Variable { termType: 'Variable', value: 'member_id' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://www.bbc.co.uk/ontologies/coreconcepts/slug'
    },
    object: Literal {
      termType: 'Literal',
      value: 'belgian-parliamentary-votes-as-a-knowledge-graph',
      language: '',
      datatype: [NamedNode]
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern'
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:33.444Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/numberOfEmployees'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_numberOfEmployees'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:33.806Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph/max-students'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/maxValue'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_numberOfEmployees_maxValue'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:34.201Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/subject'
    },
    object: Variable { termType: 'Variable', value: 'member_subject' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:34.477Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/project/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/text'
    },
    object: Variable { termType: 'Variable', value: 'member_subject_text' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:34.743Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/project/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/name'
    },
    object: Variable { termType: 'Variable', value: 'member_subject_name' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:34.980Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://dbpedia.org/ontology/year'
    },
    object: Literal {
      termType: 'Literal',
      value: '2021',
      language: '',
      datatype: [NamedNode]
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:35.144Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/memberOf'
    },
    object: NamedNode {
      termType: 'NamedNode',
      value: 'https://data.knows.idlab.ugent.be/person/office/#'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:35.304Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/contactPoint'
    },
    object: Variable { termType: 'Variable', value: 'member_contactPoint_id' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 2 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:35.474Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/mbox'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_mbox'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:35.487Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/mbox'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_mbox'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:35.585Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/familyName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_familyName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:35.586Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/familyName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_familyName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:35.743Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:35.763Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:35.765Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:35.772Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
info: Ending query 6/48, repetition 0/10 (duration: 9.708532203 s)
verbose: Query 6/48, repetition 0/10 result:
{
  "data": [
    {
      "member": [
        {
          "id": [
            "https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph"
          ],
          "subject": {
            "keywords": [
              "Linked Data",
              "Artificial Intelligence",
              "AI",
              "Data Science",
              "Knowledge Graph",
              "Semantic Web"
            ],
            "name": "Belgian parliamentary votes as a knowledge graph",
            "text": "- Like govtrack.us, but for Belgian “kamer” votes\n  - Other related work: https://progressivepunch.org/ , 538\n- Voting records are available on dekamer.be, but in a plaintext format not available for analysis (example)\n- Disclosing this data in a format ready for analysis would be great value, again, see govtrack.us\n\n- What needs to be done?\n  - The voting data is structured in the form of CSV files embedded in different HTML pages, \n  - There is much room for doing quality checks: did all (and only) 150 volksvertegenwoordigers either vote or abstain?\n  - ontology engineering: making a schema for the voting data in RDF\n- Background knowledge\n  - RDF and RML or willing to learn supe easy check tutorials at https://rml.io/docs/ \n  - Design of data models\n  - HTML and JavaScript to create a website\n  - Machine learning for data analysis \n  - Interest in the Belgian political system! Or the courage to explore it\n\n"
          },
          "contactPoint": [
            {
              "id": "https://ben.de-meester.org/#me",
              "mbox": "mailto:ben.demeester@ugent.be",
              "familyName": "De Meester",
              "givenName": "Ben"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Dimou",
              "givenName": "Anastasia"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Dimou",
              "givenName": "Αναστασία"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Δήμου",
              "givenName": "Anastasia"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Δήμου",
              "givenName": "Αναστασία"
            }
          ],
          "numberOfEmployees": {
            "maxValue": "1"
          }
        }
      ]
    }
  ]
}
info: Memory usage after handling query 6/48, repetition 0/10: 
      rss 158.61 MB
      heapTotal 107.69 MB
      heapUsed 81.96 MB
      external 1.51 MB
      arrayBuffers 0.6 MB
verbose: Query: 
{
  id(_:KNOWS)
  member {
    slug (_: "belgian-parliamentary-votes-as-a-knowledge-graph")
    year (_: "2021")
    id
    subject @single {
      keywords
      name @single
      text @single
    }
    contactPoint {
      id @single
      givenName @single
      familyName @single
      mbox @single
    }
    numberOfEmployees @single {
      maxValue @single
    }
  }
}
verbose: Context: {
  "@context": {
    "KNOWS": "https://data.knows.idlab.ugent.be/person/office/#",
    "foaf": "http://xmlns.com/foaf/0.1/",
    "schema": "http://schema.org/",
    "bbc": "http://www.bbc.co.uk/ontologies/coreconcepts/",
    "dp": "http://dbpedia.org/ontology/",
    "member": {
      "@reverse": "schema:memberOf"
    },
    "subject": "schema:subject",
    "keywords": "schema:keywords",
    "hasPart": "schema:hasPart",
    "text": "schema:text",
    "contactPoint": "schema:contactPoint",
    "mbox": "foaf:mbox",
    "givenName": {
      "@id": "foaf:givenName",
      "@language": "en"
    },
    "familyName": {
      "@id": "foaf:familyName",
      "@language": "en"
    },
    "numberOfEmployees": "schema:numberOfEmployees",
    "maxValue": "schema:maxValue",
    "additionalType": "schema:additionalType",
    "name": "schema:name",
    "year": "dp:year",
    "slug": "bbc:slug"
  }
}
verbose: Sources: [
  "https://data.knows.idlab.ugent.be/person/office/#]",
  "https://ruben.verborgh.org/profile/#me",
  "https://pieterheyvaert.com/#me",
  "https://pietercolpaert.be/#me",
  "https://www.rubensworks.net/#me",
  "https://ben.de-meester.org/#me",
  "https://natadimou.com/#me",
  "https://data.knows.idlab.ugent.be/person/femkeongenae/#me",
  "https://data.knows.idlab.ugent.be/person/sofieverbrugge/#me",
  "https://data.knows.idlab.ugent.be/person/office/master-theses.ttl"
]
info: Starting query 6/48, repetition 1/10
[2022-11-15T14:26:36.623Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/office/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:36.633Z]  INFO: Requesting https://ruben.verborgh.org/profile/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:36.638Z]  INFO: Requesting https://pieterheyvaert.com/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:36.639Z]  INFO: Requesting https://pietercolpaert.be/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:36.641Z]  INFO: Requesting https://www.rubensworks.net/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:36.659Z]  INFO: Requesting https://ben.de-meester.org/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:36.662Z]  INFO: Requesting https://natadimou.com/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:36.665Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/femkeongenae/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:36.670Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/sofieverbrugge/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:36.675Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/office/master-theses.ttl {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:36.756Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/office/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:37.542Z]  INFO: Identified as file source: https://ruben.verborgh.org/profile/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:38.212Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/femkeongenae/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:38.273Z]  INFO: Identified as file source: https://pieterheyvaert.com/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:38.318Z]  INFO: Identified as file source: https://natadimou.com/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:38.335Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/sofieverbrugge/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:38.526Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/office/master-theses.ttl {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:39.512Z]  INFO: Requesting https://schema.org {
  headers: {
    accept: 'application/ld+json',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:39.675Z]  INFO: Identified as file source: https://www.rubensworks.net/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:39.734Z]  INFO: Identified as file source: https://ben.de-meester.org/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:39.761Z]  INFO: Requesting https://schema.org//docs/jsonldcontext.jsonld {
  headers: {
    accept: 'application/ld+json',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:40.369Z]  INFO: Identified as file source: https://pietercolpaert.be/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:40.420Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: Variable { termType: 'Variable', value: 'member_id' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://www.bbc.co.uk/ontologies/coreconcepts/slug'
    },
    object: Literal {
      termType: 'Literal',
      value: 'belgian-parliamentary-votes-as-a-knowledge-graph',
      language: '',
      datatype: [NamedNode]
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern'
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:40.641Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/numberOfEmployees'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_numberOfEmployees'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:40.800Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph/max-students'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/maxValue'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_numberOfEmployees_maxValue'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:40.962Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/subject'
    },
    object: Variable { termType: 'Variable', value: 'member_subject' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:41.067Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/project/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/text'
    },
    object: Variable { termType: 'Variable', value: 'member_subject_text' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:41.155Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/project/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/name'
    },
    object: Variable { termType: 'Variable', value: 'member_subject_name' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:41.338Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://dbpedia.org/ontology/year'
    },
    object: Literal {
      termType: 'Literal',
      value: '2021',
      language: '',
      datatype: [NamedNode]
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:41.528Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/memberOf'
    },
    object: NamedNode {
      termType: 'NamedNode',
      value: 'https://data.knows.idlab.ugent.be/person/office/#'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:41.694Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/contactPoint'
    },
    object: Variable { termType: 'Variable', value: 'member_contactPoint_id' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 2 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:41.821Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/mbox'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_mbox'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:41.822Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/mbox'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_mbox'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:41.902Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/familyName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_familyName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:41.911Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/familyName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_familyName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:42.036Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:42.037Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:42.037Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:42.037Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
info: Ending query 6/48, repetition 1/10 (duration: 5.953055955 s)
verbose: Query 6/48, repetition 1/10 result:
{
  "data": [
    {
      "member": [
        {
          "id": [
            "https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph"
          ],
          "subject": {
            "keywords": [
              "Linked Data",
              "Artificial Intelligence",
              "AI",
              "Data Science",
              "Knowledge Graph",
              "Semantic Web"
            ],
            "name": "Belgian parliamentary votes as a knowledge graph",
            "text": "- Like govtrack.us, but for Belgian “kamer” votes\n  - Other related work: https://progressivepunch.org/ , 538\n- Voting records are available on dekamer.be, but in a plaintext format not available for analysis (example)\n- Disclosing this data in a format ready for analysis would be great value, again, see govtrack.us\n\n- What needs to be done?\n  - The voting data is structured in the form of CSV files embedded in different HTML pages, \n  - There is much room for doing quality checks: did all (and only) 150 volksvertegenwoordigers either vote or abstain?\n  - ontology engineering: making a schema for the voting data in RDF\n- Background knowledge\n  - RDF and RML or willing to learn supe easy check tutorials at https://rml.io/docs/ \n  - Design of data models\n  - HTML and JavaScript to create a website\n  - Machine learning for data analysis \n  - Interest in the Belgian political system! Or the courage to explore it\n\n"
          },
          "contactPoint": [
            {
              "id": "https://ben.de-meester.org/#me",
              "mbox": "mailto:ben.demeester@ugent.be",
              "familyName": "De Meester",
              "givenName": "Ben"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Dimou",
              "givenName": "Anastasia"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Dimou",
              "givenName": "Αναστασία"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Δήμου",
              "givenName": "Anastasia"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Δήμου",
              "givenName": "Αναστασία"
            }
          ],
          "numberOfEmployees": {
            "maxValue": "1"
          }
        }
      ]
    }
  ]
}
info: Memory usage after handling query 6/48, repetition 1/10: 
      rss 213.35 MB
      heapTotal 162.9 MB
      heapUsed 135.57 MB
      external 2.02 MB
      arrayBuffers 1.11 MB
verbose: Query: 
{
  id(_:KNOWS)
  member {
    slug (_: "belgian-parliamentary-votes-as-a-knowledge-graph")
    year (_: "2021")
    id
    subject @single {
      keywords
      name @single
      text @single
    }
    contactPoint {
      id @single
      givenName @single
      familyName @single
      mbox @single
    }
    numberOfEmployees @single {
      maxValue @single
    }
  }
}
verbose: Context: {
  "@context": {
    "KNOWS": "https://data.knows.idlab.ugent.be/person/office/#",
    "foaf": "http://xmlns.com/foaf/0.1/",
    "schema": "http://schema.org/",
    "bbc": "http://www.bbc.co.uk/ontologies/coreconcepts/",
    "dp": "http://dbpedia.org/ontology/",
    "member": {
      "@reverse": "schema:memberOf"
    },
    "subject": "schema:subject",
    "keywords": "schema:keywords",
    "hasPart": "schema:hasPart",
    "text": "schema:text",
    "contactPoint": "schema:contactPoint",
    "mbox": "foaf:mbox",
    "givenName": {
      "@id": "foaf:givenName",
      "@language": "en"
    },
    "familyName": {
      "@id": "foaf:familyName",
      "@language": "en"
    },
    "numberOfEmployees": "schema:numberOfEmployees",
    "maxValue": "schema:maxValue",
    "additionalType": "schema:additionalType",
    "name": "schema:name",
    "year": "dp:year",
    "slug": "bbc:slug"
  }
}
verbose: Sources: [
  "https://data.knows.idlab.ugent.be/person/office/#]",
  "https://ruben.verborgh.org/profile/#me",
  "https://pieterheyvaert.com/#me",
  "https://pietercolpaert.be/#me",
  "https://www.rubensworks.net/#me",
  "https://ben.de-meester.org/#me",
  "https://natadimou.com/#me",
  "https://data.knows.idlab.ugent.be/person/femkeongenae/#me",
  "https://data.knows.idlab.ugent.be/person/sofieverbrugge/#me",
  "https://data.knows.idlab.ugent.be/person/office/master-theses.ttl"
]
info: Starting query 6/48, repetition 2/10
[2022-11-15T14:26:42.594Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/office/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:42.596Z]  INFO: Requesting https://ruben.verborgh.org/profile/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:42.597Z]  INFO: Requesting https://pieterheyvaert.com/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:42.598Z]  INFO: Requesting https://pietercolpaert.be/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:42.599Z]  INFO: Requesting https://www.rubensworks.net/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:42.600Z]  INFO: Requesting https://ben.de-meester.org/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:42.604Z]  INFO: Requesting https://natadimou.com/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:42.605Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/femkeongenae/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:42.606Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/sofieverbrugge/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:42.613Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/office/master-theses.ttl {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:42.652Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/office/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:42.711Z]  INFO: Identified as file source: https://pieterheyvaert.com/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:42.727Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/femkeongenae/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:43.116Z]  INFO: Identified as file source: https://ruben.verborgh.org/profile/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:43.628Z]  INFO: Identified as file source: https://natadimou.com/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:43.646Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/sofieverbrugge/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:43.741Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/office/master-theses.ttl {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:44.024Z]  INFO: Identified as file source: https://www.rubensworks.net/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:44.041Z]  INFO: Requesting https://schema.org {
  headers: {
    accept: 'application/ld+json',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:44.043Z]  INFO: Identified as file source: https://ben.de-meester.org/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:44.080Z]  INFO: Requesting https://schema.org//docs/jsonldcontext.jsonld {
  headers: {
    accept: 'application/ld+json',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:44.331Z]  INFO: Identified as file source: https://pietercolpaert.be/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:44.336Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: Variable { termType: 'Variable', value: 'member_id' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://www.bbc.co.uk/ontologies/coreconcepts/slug'
    },
    object: Literal {
      termType: 'Literal',
      value: 'belgian-parliamentary-votes-as-a-knowledge-graph',
      language: '',
      datatype: [NamedNode]
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern'
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:44.484Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/numberOfEmployees'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_numberOfEmployees'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:44.566Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph/max-students'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/maxValue'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_numberOfEmployees_maxValue'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:44.651Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/subject'
    },
    object: Variable { termType: 'Variable', value: 'member_subject' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:44.741Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/project/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/text'
    },
    object: Variable { termType: 'Variable', value: 'member_subject_text' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:44.826Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/project/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/name'
    },
    object: Variable { termType: 'Variable', value: 'member_subject_name' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:44.984Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://dbpedia.org/ontology/year'
    },
    object: Literal {
      termType: 'Literal',
      value: '2021',
      language: '',
      datatype: [NamedNode]
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:45.087Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/memberOf'
    },
    object: NamedNode {
      termType: 'NamedNode',
      value: 'https://data.knows.idlab.ugent.be/person/office/#'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:45.199Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/contactPoint'
    },
    object: Variable { termType: 'Variable', value: 'member_contactPoint_id' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 2 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:45.316Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/mbox'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_mbox'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:45.316Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/mbox'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_mbox'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:45.402Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/familyName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_familyName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:45.403Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/familyName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_familyName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:45.501Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:45.501Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:45.502Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:45.502Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
info: Ending query 6/48, repetition 2/10 (duration: 3.672908958 s)
verbose: Query 6/48, repetition 2/10 result:
{
  "data": [
    {
      "member": [
        {
          "id": [
            "https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph"
          ],
          "subject": {
            "keywords": [
              "Linked Data",
              "Artificial Intelligence",
              "AI",
              "Data Science",
              "Knowledge Graph",
              "Semantic Web"
            ],
            "name": "Belgian parliamentary votes as a knowledge graph",
            "text": "- Like govtrack.us, but for Belgian “kamer” votes\n  - Other related work: https://progressivepunch.org/ , 538\n- Voting records are available on dekamer.be, but in a plaintext format not available for analysis (example)\n- Disclosing this data in a format ready for analysis would be great value, again, see govtrack.us\n\n- What needs to be done?\n  - The voting data is structured in the form of CSV files embedded in different HTML pages, \n  - There is much room for doing quality checks: did all (and only) 150 volksvertegenwoordigers either vote or abstain?\n  - ontology engineering: making a schema for the voting data in RDF\n- Background knowledge\n  - RDF and RML or willing to learn supe easy check tutorials at https://rml.io/docs/ \n  - Design of data models\n  - HTML and JavaScript to create a website\n  - Machine learning for data analysis \n  - Interest in the Belgian political system! Or the courage to explore it\n\n"
          },
          "contactPoint": [
            {
              "id": "https://ben.de-meester.org/#me",
              "mbox": "mailto:ben.demeester@ugent.be",
              "familyName": "De Meester",
              "givenName": "Ben"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Dimou",
              "givenName": "Anastasia"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Dimou",
              "givenName": "Αναστασία"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Δήμου",
              "givenName": "Anastasia"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Δήμου",
              "givenName": "Αναστασία"
            }
          ],
          "numberOfEmployees": {
            "maxValue": "1"
          }
        }
      ]
    }
  ]
}
info: Memory usage after handling query 6/48, repetition 2/10: 
      rss 269.97 MB
      heapTotal 217.06 MB
      heapUsed 185.01 MB
      external 2.56 MB
      arrayBuffers 1.61 MB
verbose: Query: 
{
  id(_:KNOWS)
  member {
    slug (_: "belgian-parliamentary-votes-as-a-knowledge-graph")
    year (_: "2021")
    id
    subject @single {
      keywords
      name @single
      text @single
    }
    contactPoint {
      id @single
      givenName @single
      familyName @single
      mbox @single
    }
    numberOfEmployees @single {
      maxValue @single
    }
  }
}
verbose: Context: {
  "@context": {
    "KNOWS": "https://data.knows.idlab.ugent.be/person/office/#",
    "foaf": "http://xmlns.com/foaf/0.1/",
    "schema": "http://schema.org/",
    "bbc": "http://www.bbc.co.uk/ontologies/coreconcepts/",
    "dp": "http://dbpedia.org/ontology/",
    "member": {
      "@reverse": "schema:memberOf"
    },
    "subject": "schema:subject",
    "keywords": "schema:keywords",
    "hasPart": "schema:hasPart",
    "text": "schema:text",
    "contactPoint": "schema:contactPoint",
    "mbox": "foaf:mbox",
    "givenName": {
      "@id": "foaf:givenName",
      "@language": "en"
    },
    "familyName": {
      "@id": "foaf:familyName",
      "@language": "en"
    },
    "numberOfEmployees": "schema:numberOfEmployees",
    "maxValue": "schema:maxValue",
    "additionalType": "schema:additionalType",
    "name": "schema:name",
    "year": "dp:year",
    "slug": "bbc:slug"
  }
}
verbose: Sources: [
  "https://data.knows.idlab.ugent.be/person/office/#]",
  "https://ruben.verborgh.org/profile/#me",
  "https://pieterheyvaert.com/#me",
  "https://pietercolpaert.be/#me",
  "https://www.rubensworks.net/#me",
  "https://ben.de-meester.org/#me",
  "https://natadimou.com/#me",
  "https://data.knows.idlab.ugent.be/person/femkeongenae/#me",
  "https://data.knows.idlab.ugent.be/person/sofieverbrugge/#me",
  "https://data.knows.idlab.ugent.be/person/office/master-theses.ttl"
]
info: Starting query 6/48, repetition 3/10
[2022-11-15T14:26:46.280Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/office/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:46.281Z]  INFO: Requesting https://ruben.verborgh.org/profile/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:46.282Z]  INFO: Requesting https://pieterheyvaert.com/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:46.282Z]  INFO: Requesting https://pietercolpaert.be/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:46.283Z]  INFO: Requesting https://www.rubensworks.net/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:46.284Z]  INFO: Requesting https://ben.de-meester.org/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:46.287Z]  INFO: Requesting https://natadimou.com/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:46.289Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/femkeongenae/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:46.290Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/sofieverbrugge/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:46.303Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/office/master-theses.ttl {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:46.335Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/office/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:46.361Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/femkeongenae/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:46.414Z]  INFO: Identified as file source: https://pieterheyvaert.com/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:46.437Z]  INFO: Identified as file source: https://natadimou.com/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:46.474Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/sofieverbrugge/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:46.754Z]  INFO: Identified as file source: https://ruben.verborgh.org/profile/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:47.147Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/office/master-theses.ttl {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:47.438Z]  INFO: Identified as file source: https://www.rubensworks.net/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:47.478Z]  INFO: Requesting https://schema.org {
  headers: {
    accept: 'application/ld+json',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:47.490Z]  INFO: Identified as file source: https://ben.de-meester.org/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:47.514Z]  INFO: Requesting https://schema.org//docs/jsonldcontext.jsonld {
  headers: {
    accept: 'application/ld+json',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:47.725Z]  INFO: Identified as file source: https://pietercolpaert.be/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:47.729Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: Variable { termType: 'Variable', value: 'member_id' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://www.bbc.co.uk/ontologies/coreconcepts/slug'
    },
    object: Literal {
      termType: 'Literal',
      value: 'belgian-parliamentary-votes-as-a-knowledge-graph',
      language: '',
      datatype: [NamedNode]
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern'
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:47.837Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/numberOfEmployees'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_numberOfEmployees'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:47.954Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph/max-students'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/maxValue'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_numberOfEmployees_maxValue'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:48.174Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/subject'
    },
    object: Variable { termType: 'Variable', value: 'member_subject' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:48.479Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/project/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/text'
    },
    object: Variable { termType: 'Variable', value: 'member_subject_text' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:48.571Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/project/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/name'
    },
    object: Variable { termType: 'Variable', value: 'member_subject_name' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:48.622Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://dbpedia.org/ontology/year'
    },
    object: Literal {
      termType: 'Literal',
      value: '2021',
      language: '',
      datatype: [NamedNode]
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:48.673Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/memberOf'
    },
    object: NamedNode {
      termType: 'NamedNode',
      value: 'https://data.knows.idlab.ugent.be/person/office/#'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:48.712Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/contactPoint'
    },
    object: Variable { termType: 'Variable', value: 'member_contactPoint_id' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 2 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:48.794Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/mbox'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_mbox'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:48.795Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/mbox'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_mbox'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:48.837Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/familyName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_familyName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:48.839Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/familyName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_familyName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:48.889Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:48.891Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:48.893Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:48.894Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
info: Ending query 6/48, repetition 3/10 (duration: 2.976683737 s)
verbose: Query 6/48, repetition 3/10 result:
{
  "data": [
    {
      "member": [
        {
          "id": [
            "https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph"
          ],
          "subject": {
            "keywords": [
              "Linked Data",
              "Artificial Intelligence",
              "AI",
              "Data Science",
              "Knowledge Graph",
              "Semantic Web"
            ],
            "name": "Belgian parliamentary votes as a knowledge graph",
            "text": "- Like govtrack.us, but for Belgian “kamer” votes\n  - Other related work: https://progressivepunch.org/ , 538\n- Voting records are available on dekamer.be, but in a plaintext format not available for analysis (example)\n- Disclosing this data in a format ready for analysis would be great value, again, see govtrack.us\n\n- What needs to be done?\n  - The voting data is structured in the form of CSV files embedded in different HTML pages, \n  - There is much room for doing quality checks: did all (and only) 150 volksvertegenwoordigers either vote or abstain?\n  - ontology engineering: making a schema for the voting data in RDF\n- Background knowledge\n  - RDF and RML or willing to learn supe easy check tutorials at https://rml.io/docs/ \n  - Design of data models\n  - HTML and JavaScript to create a website\n  - Machine learning for data analysis \n  - Interest in the Belgian political system! Or the courage to explore it\n\n"
          },
          "contactPoint": [
            {
              "id": "https://ben.de-meester.org/#me",
              "mbox": "mailto:ben.demeester@ugent.be",
              "familyName": "De Meester",
              "givenName": "Ben"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Dimou",
              "givenName": "Anastasia"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Dimou",
              "givenName": "Αναστασία"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Δήμου",
              "givenName": "Anastasia"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Δήμου",
              "givenName": "Αναστασία"
            }
          ],
          "numberOfEmployees": {
            "maxValue": "1"
          }
        }
      ]
    }
  ]
}
info: Memory usage after handling query 6/48, repetition 3/10: 
      rss 204.46 MB
      heapTotal 150.63 MB
      heapUsed 74.79 MB
      external 1.12 MB
      arrayBuffers 0.17 MB
verbose: Query: 
{
  id(_:KNOWS)
  member {
    slug (_: "belgian-parliamentary-votes-as-a-knowledge-graph")
    year (_: "2021")
    id
    subject @single {
      keywords
      name @single
      text @single
    }
    contactPoint {
      id @single
      givenName @single
      familyName @single
      mbox @single
    }
    numberOfEmployees @single {
      maxValue @single
    }
  }
}
verbose: Context: {
  "@context": {
    "KNOWS": "https://data.knows.idlab.ugent.be/person/office/#",
    "foaf": "http://xmlns.com/foaf/0.1/",
    "schema": "http://schema.org/",
    "bbc": "http://www.bbc.co.uk/ontologies/coreconcepts/",
    "dp": "http://dbpedia.org/ontology/",
    "member": {
      "@reverse": "schema:memberOf"
    },
    "subject": "schema:subject",
    "keywords": "schema:keywords",
    "hasPart": "schema:hasPart",
    "text": "schema:text",
    "contactPoint": "schema:contactPoint",
    "mbox": "foaf:mbox",
    "givenName": {
      "@id": "foaf:givenName",
      "@language": "en"
    },
    "familyName": {
      "@id": "foaf:familyName",
      "@language": "en"
    },
    "numberOfEmployees": "schema:numberOfEmployees",
    "maxValue": "schema:maxValue",
    "additionalType": "schema:additionalType",
    "name": "schema:name",
    "year": "dp:year",
    "slug": "bbc:slug"
  }
}
verbose: Sources: [
  "https://data.knows.idlab.ugent.be/person/office/#]",
  "https://ruben.verborgh.org/profile/#me",
  "https://pieterheyvaert.com/#me",
  "https://pietercolpaert.be/#me",
  "https://www.rubensworks.net/#me",
  "https://ben.de-meester.org/#me",
  "https://natadimou.com/#me",
  "https://data.knows.idlab.ugent.be/person/femkeongenae/#me",
  "https://data.knows.idlab.ugent.be/person/sofieverbrugge/#me",
  "https://data.knows.idlab.ugent.be/person/office/master-theses.ttl"
]
info: Starting query 6/48, repetition 4/10
[2022-11-15T14:26:49.211Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/office/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:49.214Z]  INFO: Requesting https://ruben.verborgh.org/profile/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:49.215Z]  INFO: Requesting https://pieterheyvaert.com/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:49.216Z]  INFO: Requesting https://pietercolpaert.be/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:49.217Z]  INFO: Requesting https://www.rubensworks.net/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:49.218Z]  INFO: Requesting https://ben.de-meester.org/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:49.220Z]  INFO: Requesting https://natadimou.com/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:49.221Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/femkeongenae/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:49.226Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/sofieverbrugge/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:49.227Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/office/master-theses.ttl {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:49.269Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/office/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:49.677Z]  INFO: Identified as file source: https://ruben.verborgh.org/profile/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:49.962Z]  INFO: Identified as file source: https://pieterheyvaert.com/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:49.967Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/femkeongenae/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:49.970Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/sofieverbrugge/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:49.974Z]  INFO: Identified as file source: https://natadimou.com/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:50.009Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/office/master-theses.ttl {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:50.236Z]  INFO: Identified as file source: https://ben.de-meester.org/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:50.266Z]  INFO: Requesting https://schema.org {
  headers: {
    accept: 'application/ld+json',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:50.288Z]  INFO: Identified as file source: https://www.rubensworks.net/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:50.301Z]  INFO: Requesting https://schema.org//docs/jsonldcontext.jsonld {
  headers: {
    accept: 'application/ld+json',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:50.554Z]  INFO: Identified as file source: https://pietercolpaert.be/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:50.559Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: Variable { termType: 'Variable', value: 'member_id' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://www.bbc.co.uk/ontologies/coreconcepts/slug'
    },
    object: Literal {
      termType: 'Literal',
      value: 'belgian-parliamentary-votes-as-a-knowledge-graph',
      language: '',
      datatype: [NamedNode]
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern'
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:50.678Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/numberOfEmployees'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_numberOfEmployees'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:50.769Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph/max-students'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/maxValue'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_numberOfEmployees_maxValue'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:50.862Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/subject'
    },
    object: Variable { termType: 'Variable', value: 'member_subject' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:50.937Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/project/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/text'
    },
    object: Variable { termType: 'Variable', value: 'member_subject_text' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:50.999Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/project/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/name'
    },
    object: Variable { termType: 'Variable', value: 'member_subject_name' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:51.073Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://dbpedia.org/ontology/year'
    },
    object: Literal {
      termType: 'Literal',
      value: '2021',
      language: '',
      datatype: [NamedNode]
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:51.120Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/memberOf'
    },
    object: NamedNode {
      termType: 'NamedNode',
      value: 'https://data.knows.idlab.ugent.be/person/office/#'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:51.172Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/contactPoint'
    },
    object: Variable { termType: 'Variable', value: 'member_contactPoint_id' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 2 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:51.209Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/mbox'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_mbox'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:51.210Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/mbox'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_mbox'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:51.244Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/familyName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_familyName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:51.244Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/familyName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_familyName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:51.285Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:51.286Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:51.286Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:51.287Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
info: Ending query 6/48, repetition 4/10 (duration: 2.292154034 s)
verbose: Query 6/48, repetition 4/10 result:
{
  "data": [
    {
      "member": [
        {
          "id": [
            "https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph"
          ],
          "subject": {
            "keywords": [
              "Linked Data",
              "Artificial Intelligence",
              "AI",
              "Data Science",
              "Knowledge Graph",
              "Semantic Web"
            ],
            "name": "Belgian parliamentary votes as a knowledge graph",
            "text": "- Like govtrack.us, but for Belgian “kamer” votes\n  - Other related work: https://progressivepunch.org/ , 538\n- Voting records are available on dekamer.be, but in a plaintext format not available for analysis (example)\n- Disclosing this data in a format ready for analysis would be great value, again, see govtrack.us\n\n- What needs to be done?\n  - The voting data is structured in the form of CSV files embedded in different HTML pages, \n  - There is much room for doing quality checks: did all (and only) 150 volksvertegenwoordigers either vote or abstain?\n  - ontology engineering: making a schema for the voting data in RDF\n- Background knowledge\n  - RDF and RML or willing to learn supe easy check tutorials at https://rml.io/docs/ \n  - Design of data models\n  - HTML and JavaScript to create a website\n  - Machine learning for data analysis \n  - Interest in the Belgian political system! Or the courage to explore it\n\n"
          },
          "contactPoint": [
            {
              "id": "https://ben.de-meester.org/#me",
              "mbox": "mailto:ben.demeester@ugent.be",
              "familyName": "De Meester",
              "givenName": "Ben"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Dimou",
              "givenName": "Anastasia"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Dimou",
              "givenName": "Αναστασία"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Δήμου",
              "givenName": "Anastasia"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Δήμου",
              "givenName": "Αναστασία"
            }
          ],
          "numberOfEmployees": {
            "maxValue": "1"
          }
        }
      ]
    }
  ]
}
info: Memory usage after handling query 6/48, repetition 4/10: 
      rss 212.25 MB
      heapTotal 158.34 MB
      heapUsed 131.91 MB
      external 1.63 MB
      arrayBuffers 0.7 MB
verbose: Query: 
{
  id(_:KNOWS)
  member {
    slug (_: "belgian-parliamentary-votes-as-a-knowledge-graph")
    year (_: "2021")
    id
    subject @single {
      keywords
      name @single
      text @single
    }
    contactPoint {
      id @single
      givenName @single
      familyName @single
      mbox @single
    }
    numberOfEmployees @single {
      maxValue @single
    }
  }
}
verbose: Context: {
  "@context": {
    "KNOWS": "https://data.knows.idlab.ugent.be/person/office/#",
    "foaf": "http://xmlns.com/foaf/0.1/",
    "schema": "http://schema.org/",
    "bbc": "http://www.bbc.co.uk/ontologies/coreconcepts/",
    "dp": "http://dbpedia.org/ontology/",
    "member": {
      "@reverse": "schema:memberOf"
    },
    "subject": "schema:subject",
    "keywords": "schema:keywords",
    "hasPart": "schema:hasPart",
    "text": "schema:text",
    "contactPoint": "schema:contactPoint",
    "mbox": "foaf:mbox",
    "givenName": {
      "@id": "foaf:givenName",
      "@language": "en"
    },
    "familyName": {
      "@id": "foaf:familyName",
      "@language": "en"
    },
    "numberOfEmployees": "schema:numberOfEmployees",
    "maxValue": "schema:maxValue",
    "additionalType": "schema:additionalType",
    "name": "schema:name",
    "year": "dp:year",
    "slug": "bbc:slug"
  }
}
verbose: Sources: [
  "https://data.knows.idlab.ugent.be/person/office/#]",
  "https://ruben.verborgh.org/profile/#me",
  "https://pieterheyvaert.com/#me",
  "https://pietercolpaert.be/#me",
  "https://www.rubensworks.net/#me",
  "https://ben.de-meester.org/#me",
  "https://natadimou.com/#me",
  "https://data.knows.idlab.ugent.be/person/femkeongenae/#me",
  "https://data.knows.idlab.ugent.be/person/sofieverbrugge/#me",
  "https://data.knows.idlab.ugent.be/person/office/master-theses.ttl"
]
info: Starting query 6/48, repetition 5/10
[2022-11-15T14:26:51.491Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/office/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:51.492Z]  INFO: Requesting https://ruben.verborgh.org/profile/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:51.493Z]  INFO: Requesting https://pieterheyvaert.com/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:51.494Z]  INFO: Requesting https://pietercolpaert.be/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:51.494Z]  INFO: Requesting https://www.rubensworks.net/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:51.495Z]  INFO: Requesting https://ben.de-meester.org/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:51.502Z]  INFO: Requesting https://natadimou.com/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:51.503Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/femkeongenae/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:51.505Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/sofieverbrugge/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:51.507Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/office/master-theses.ttl {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:51.557Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/office/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:51.564Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/sofieverbrugge/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:51.598Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/femkeongenae/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:51.615Z]  INFO: Identified as file source: https://pieterheyvaert.com/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:51.621Z]  INFO: Identified as file source: https://natadimou.com/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:51.792Z]  INFO: Identified as file source: https://ruben.verborgh.org/profile/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:52.234Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/office/master-theses.ttl {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:52.384Z]  INFO: Identified as file source: https://www.rubensworks.net/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:52.391Z]  INFO: Identified as file source: https://ben.de-meester.org/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:52.421Z]  INFO: Requesting https://schema.org {
  headers: {
    accept: 'application/ld+json',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:52.460Z]  INFO: Requesting https://schema.org//docs/jsonldcontext.jsonld {
  headers: {
    accept: 'application/ld+json',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:52.658Z]  INFO: Identified as file source: https://pietercolpaert.be/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:52.668Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: Variable { termType: 'Variable', value: 'member_id' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://www.bbc.co.uk/ontologies/coreconcepts/slug'
    },
    object: Literal {
      termType: 'Literal',
      value: 'belgian-parliamentary-votes-as-a-knowledge-graph',
      language: '',
      datatype: [NamedNode]
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern'
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:52.781Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/numberOfEmployees'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_numberOfEmployees'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:52.885Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph/max-students'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/maxValue'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_numberOfEmployees_maxValue'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:52.978Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/subject'
    },
    object: Variable { termType: 'Variable', value: 'member_subject' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:53.044Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/project/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/text'
    },
    object: Variable { termType: 'Variable', value: 'member_subject_text' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:53.111Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/project/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/name'
    },
    object: Variable { termType: 'Variable', value: 'member_subject_name' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:53.164Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://dbpedia.org/ontology/year'
    },
    object: Literal {
      termType: 'Literal',
      value: '2021',
      language: '',
      datatype: [NamedNode]
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:53.226Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/memberOf'
    },
    object: NamedNode {
      termType: 'NamedNode',
      value: 'https://data.knows.idlab.ugent.be/person/office/#'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:53.280Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/contactPoint'
    },
    object: Variable { termType: 'Variable', value: 'member_contactPoint_id' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 2 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:53.322Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/mbox'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_mbox'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:53.323Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/mbox'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_mbox'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:53.354Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/familyName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_familyName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:53.355Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/familyName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_familyName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:53.400Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:53.401Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:53.401Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:53.401Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
info: Ending query 6/48, repetition 5/10 (duration: 2.108657182 s)
verbose: Query 6/48, repetition 5/10 result:
{
  "data": [
    {
      "member": [
        {
          "id": [
            "https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph"
          ],
          "subject": {
            "keywords": [
              "Linked Data",
              "Artificial Intelligence",
              "AI",
              "Data Science",
              "Knowledge Graph",
              "Semantic Web"
            ],
            "name": "Belgian parliamentary votes as a knowledge graph",
            "text": "- Like govtrack.us, but for Belgian “kamer” votes\n  - Other related work: https://progressivepunch.org/ , 538\n- Voting records are available on dekamer.be, but in a plaintext format not available for analysis (example)\n- Disclosing this data in a format ready for analysis would be great value, again, see govtrack.us\n\n- What needs to be done?\n  - The voting data is structured in the form of CSV files embedded in different HTML pages, \n  - There is much room for doing quality checks: did all (and only) 150 volksvertegenwoordigers either vote or abstain?\n  - ontology engineering: making a schema for the voting data in RDF\n- Background knowledge\n  - RDF and RML or willing to learn supe easy check tutorials at https://rml.io/docs/ \n  - Design of data models\n  - HTML and JavaScript to create a website\n  - Machine learning for data analysis \n  - Interest in the Belgian political system! Or the courage to explore it\n\n"
          },
          "contactPoint": [
            {
              "id": "https://ben.de-meester.org/#me",
              "mbox": "mailto:ben.demeester@ugent.be",
              "familyName": "De Meester",
              "givenName": "Ben"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Dimou",
              "givenName": "Anastasia"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Dimou",
              "givenName": "Αναστασία"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Δήμου",
              "givenName": "Anastasia"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Δήμου",
              "givenName": "Αναστασία"
            }
          ],
          "numberOfEmployees": {
            "maxValue": "1"
          }
        }
      ]
    }
  ]
}
info: Memory usage after handling query 6/48, repetition 5/10: 
      rss 265.01 MB
      heapTotal 211.05 MB
      heapUsed 181.04 MB
      external 2.15 MB
      arrayBuffers 1.23 MB
verbose: Query: 
{
  id(_:KNOWS)
  member {
    slug (_: "belgian-parliamentary-votes-as-a-knowledge-graph")
    year (_: "2021")
    id
    subject @single {
      keywords
      name @single
      text @single
    }
    contactPoint {
      id @single
      givenName @single
      familyName @single
      mbox @single
    }
    numberOfEmployees @single {
      maxValue @single
    }
  }
}
verbose: Context: {
  "@context": {
    "KNOWS": "https://data.knows.idlab.ugent.be/person/office/#",
    "foaf": "http://xmlns.com/foaf/0.1/",
    "schema": "http://schema.org/",
    "bbc": "http://www.bbc.co.uk/ontologies/coreconcepts/",
    "dp": "http://dbpedia.org/ontology/",
    "member": {
      "@reverse": "schema:memberOf"
    },
    "subject": "schema:subject",
    "keywords": "schema:keywords",
    "hasPart": "schema:hasPart",
    "text": "schema:text",
    "contactPoint": "schema:contactPoint",
    "mbox": "foaf:mbox",
    "givenName": {
      "@id": "foaf:givenName",
      "@language": "en"
    },
    "familyName": {
      "@id": "foaf:familyName",
      "@language": "en"
    },
    "numberOfEmployees": "schema:numberOfEmployees",
    "maxValue": "schema:maxValue",
    "additionalType": "schema:additionalType",
    "name": "schema:name",
    "year": "dp:year",
    "slug": "bbc:slug"
  }
}
verbose: Sources: [
  "https://data.knows.idlab.ugent.be/person/office/#]",
  "https://ruben.verborgh.org/profile/#me",
  "https://pieterheyvaert.com/#me",
  "https://pietercolpaert.be/#me",
  "https://www.rubensworks.net/#me",
  "https://ben.de-meester.org/#me",
  "https://natadimou.com/#me",
  "https://data.knows.idlab.ugent.be/person/femkeongenae/#me",
  "https://data.knows.idlab.ugent.be/person/sofieverbrugge/#me",
  "https://data.knows.idlab.ugent.be/person/office/master-theses.ttl"
]
info: Starting query 6/48, repetition 6/10
[2022-11-15T14:26:53.603Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/office/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:53.604Z]  INFO: Requesting https://ruben.verborgh.org/profile/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:53.605Z]  INFO: Requesting https://pieterheyvaert.com/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:53.606Z]  INFO: Requesting https://pietercolpaert.be/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:53.606Z]  INFO: Requesting https://www.rubensworks.net/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:53.607Z]  INFO: Requesting https://ben.de-meester.org/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:53.608Z]  INFO: Requesting https://natadimou.com/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:53.608Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/femkeongenae/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:53.610Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/sofieverbrugge/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:53.610Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/office/master-theses.ttl {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:53.644Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/office/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:53.664Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/sofieverbrugge/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:53.669Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/femkeongenae/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:53.681Z]  INFO: Identified as file source: https://pieterheyvaert.com/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:53.704Z]  INFO: Identified as file source: https://natadimou.com/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:53.905Z]  INFO: Identified as file source: https://ruben.verborgh.org/profile/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:54.319Z]  INFO: Identified as file source: https://data.knows.idlab.ugent.be/person/office/master-theses.ttl {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:54.538Z]  INFO: Identified as file source: https://ben.de-meester.org/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:54.579Z]  INFO: Identified as file source: https://www.rubensworks.net/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:54.602Z]  INFO: Requesting https://schema.org {
  headers: {
    accept: 'application/ld+json',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:54.648Z]  INFO: Requesting https://schema.org//docs/jsonldcontext.jsonld {
  headers: {
    accept: 'application/ld+json',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:54.869Z]  INFO: Identified as file source: https://pietercolpaert.be/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
[2022-11-15T14:26:54.874Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: Variable { termType: 'Variable', value: 'member_id' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://www.bbc.co.uk/ontologies/coreconcepts/slug'
    },
    object: Literal {
      termType: 'Literal',
      value: 'belgian-parliamentary-votes-as-a-knowledge-graph',
      language: '',
      datatype: [NamedNode]
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern'
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:54.969Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/numberOfEmployees'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_numberOfEmployees'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:55.052Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph/max-students'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/maxValue'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_numberOfEmployees_maxValue'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:55.124Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/subject'
    },
    object: Variable { termType: 'Variable', value: 'member_subject' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:55.194Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/project/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/text'
    },
    object: Variable { termType: 'Variable', value: 'member_subject_text' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:55.264Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/project/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/name'
    },
    object: Variable { termType: 'Variable', value: 'member_subject_name' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:55.320Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://dbpedia.org/ontology/year'
    },
    object: Literal {
      termType: 'Literal',
      value: '2021',
      language: '',
      datatype: [NamedNode]
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:55.375Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/memberOf'
    },
    object: NamedNode {
      termType: 'NamedNode',
      value: 'https://data.knows.idlab.ugent.be/person/office/#'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:55.427Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode {
      id: 'https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph'
    },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://schema.org/contactPoint'
    },
    object: Variable { termType: 'Variable', value: 'member_contactPoint_id' },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 2 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:55.477Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/mbox'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_mbox'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:55.478Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/mbox'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_mbox'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:55.507Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/familyName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_familyName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:55.508Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/familyName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_familyName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:55.553Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://ben.de-meester.org/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 1 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:55.554Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:55.554Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
[2022-11-15T14:26:55.555Z]  DEBUG: Smallest pattern:  {
  pattern: Quad {
    termType: 'Quad',
    value: '',
    subject: NamedNode { id: 'https://natadimou.com/#me' },
    predicate: NamedNode {
      termType: 'NamedNode',
      value: 'http://xmlns.com/foaf/0.1/givenName'
    },
    object: Variable {
      termType: 'Variable',
      value: 'member_contactPoint_givenName'
    },
    graph: DefaultGraph { termType: 'DefaultGraph', value: '' },
    type: 'pattern',
    context: undefined
  },
  metadata: { totalItems: 3 },
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/sparql-queryoperators.json#myLeftDeepSmallestBgpQueryOperator'
}
info: Ending query 6/48, repetition 6/10 (duration: 2.135327899 s)
verbose: Query 6/48, repetition 6/10 result:
{
  "data": [
    {
      "member": [
        {
          "id": [
            "https://data.knows.idlab.ugent.be/master-thesis/2021/belgian-parliamentary-votes-as-a-knowledge-graph"
          ],
          "subject": {
            "keywords": [
              "Linked Data",
              "Artificial Intelligence",
              "AI",
              "Data Science",
              "Knowledge Graph",
              "Semantic Web"
            ],
            "name": "Belgian parliamentary votes as a knowledge graph",
            "text": "- Like govtrack.us, but for Belgian “kamer” votes\n  - Other related work: https://progressivepunch.org/ , 538\n- Voting records are available on dekamer.be, but in a plaintext format not available for analysis (example)\n- Disclosing this data in a format ready for analysis would be great value, again, see govtrack.us\n\n- What needs to be done?\n  - The voting data is structured in the form of CSV files embedded in different HTML pages, \n  - There is much room for doing quality checks: did all (and only) 150 volksvertegenwoordigers either vote or abstain?\n  - ontology engineering: making a schema for the voting data in RDF\n- Background knowledge\n  - RDF and RML or willing to learn supe easy check tutorials at https://rml.io/docs/ \n  - Design of data models\n  - HTML and JavaScript to create a website\n  - Machine learning for data analysis \n  - Interest in the Belgian political system! Or the courage to explore it\n\n"
          },
          "contactPoint": [
            {
              "id": "https://ben.de-meester.org/#me",
              "mbox": "mailto:ben.demeester@ugent.be",
              "familyName": "De Meester",
              "givenName": "Ben"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Dimou",
              "givenName": "Anastasia"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Dimou",
              "givenName": "Αναστασία"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Δήμου",
              "givenName": "Anastasia"
            },
            {
              "id": "https://natadimou.com/#me",
              "mbox": "mailto:anastasia.dimou@ugent.be",
              "familyName": "Δήμου",
              "givenName": "Αναστασία"
            }
          ],
          "numberOfEmployees": {
            "maxValue": "1"
          }
        }
      ]
    }
  ]
}
info: Memory usage after handling query 6/48, repetition 6/10: 
      rss 321.36 MB
      heapTotal 264.9 MB
      heapUsed 231.24 MB
      external 2.67 MB
      arrayBuffers 1.71 MB
verbose: Query: 
{
  id(_:KNOWS)
  member {
    slug (_: "belgian-parliamentary-votes-as-a-knowledge-graph")
    year (_: "2021")
    id
    subject @single {
      keywords
      name @single
      text @single
    }
    contactPoint {
      id @single
      givenName @single
      familyName @single
      mbox @single
    }
    numberOfEmployees @single {
      maxValue @single
    }
  }
}
verbose: Context: {
  "@context": {
    "KNOWS": "https://data.knows.idlab.ugent.be/person/office/#",
    "foaf": "http://xmlns.com/foaf/0.1/",
    "schema": "http://schema.org/",
    "bbc": "http://www.bbc.co.uk/ontologies/coreconcepts/",
    "dp": "http://dbpedia.org/ontology/",
    "member": {
      "@reverse": "schema:memberOf"
    },
    "subject": "schema:subject",
    "keywords": "schema:keywords",
    "hasPart": "schema:hasPart",
    "text": "schema:text",
    "contactPoint": "schema:contactPoint",
    "mbox": "foaf:mbox",
    "givenName": {
      "@id": "foaf:givenName",
      "@language": "en"
    },
    "familyName": {
      "@id": "foaf:familyName",
      "@language": "en"
    },
    "numberOfEmployees": "schema:numberOfEmployees",
    "maxValue": "schema:maxValue",
    "additionalType": "schema:additionalType",
    "name": "schema:name",
    "year": "dp:year",
    "slug": "bbc:slug"
  }
}
verbose: Sources: [
  "https://data.knows.idlab.ugent.be/person/office/#]",
  "https://ruben.verborgh.org/profile/#me",
  "https://pieterheyvaert.com/#me",
  "https://pietercolpaert.be/#me",
  "https://www.rubensworks.net/#me",
  "https://ben.de-meester.org/#me",
  "https://natadimou.com/#me",
  "https://data.knows.idlab.ugent.be/person/femkeongenae/#me",
  "https://data.knows.idlab.ugent.be/person/sofieverbrugge/#me",
  "https://data.knows.idlab.ugent.be/person/office/master-theses.ttl"
]
info: Starting query 6/48, repetition 7/10
[2022-11-15T14:26:55.745Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/office/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:55.746Z]  INFO: Requesting https://ruben.verborgh.org/profile/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:55.747Z]  INFO: Requesting https://pieterheyvaert.com/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:55.748Z]  INFO: Requesting https://pietercolpaert.be/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:55.749Z]  INFO: Requesting https://www.rubensworks.net/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:55.750Z]  INFO: Requesting https://ben.de-meester.org/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:55.751Z]  INFO: Requesting https://natadimou.com/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:55.752Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/femkeongenae/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:55.753Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/sofieverbrugge/ {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:55.754Z]  INFO: Requesting https://data.knows.idlab.ugent.be/person/office/master-theses.ttl {
  headers: {
    accept: 'application/n-quads,application/trig;q=0.95,application/ld+json;q=0.9,application/n-triples;q=0.8,text/turtle;q=0.6,application/rdf+xml;q=0.5,application/json;q=0.45,text/n3;q=0.35,application/xml;q=0.3,image/svg+xml;q=0.3,text/xml;q=0.3,text/html;q=0.2,application/xhtml+xml;q=0.18',
    'user-agent': 'Comunica/actor-http-node-fetch (Node.js v16.18.1; linux)'
  },
  method: 'GET',
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/http.json#myHttpFetcher'
}
[2022-11-15T14:26:55.763Z]  INFO: Identified as file source: https://ben.de-meester.org/ {
  actor: 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/sets/resolve-hypermedia.json#myHypermediaNoneResolver'
}
error: Query 6/48, repetition 7/10 failed after 0.66045046 s: FetchError: request to https://ben.de-meester.org/ failed, reason: socket hang up
info: Ending app (duration: 28.970997915 s)

/home/mavbraba/git-workingcopies/martin/comunica-test-knows/node_modules/node-fetch/lib/index.js:1491
			reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));
			       ^
FetchError: request to https://ben.de-meester.org/ failed, reason: socket hang up
    at ClientRequest.<anonymous> (/home/mavbraba/git-workingcopies/martin/comunica-test-knows/node_modules/node-fetch/lib/index.js:1491:11)
    at ClientRequest.emit (node:events:513:28)
    at TLSSocket.socketOnEnd (node:_http_client:518:9)
    at TLSSocket.emit (node:events:525:35)
    at endReadableNT (node:internal/streams/readable:1358:12)
    at processTicksAndRejections (node:internal/process/task_queues:83:21) {
  type: 'system',
  errno: 'ECONNRESET',
  code: 'ECONNRESET'
}
